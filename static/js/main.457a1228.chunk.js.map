{"version":3,"sources":["slide/logo2018.png","slide/TeamMemberInfo.js","slide/Slide.js","slide/TitleSlide.js","slide/TeamInfoSlide.js","content/Content.js","forms/UserData.js","forms/ProjectData.js","forms/ImageUploader.js","App.js","index.js"],"names":["module","exports","TeamMemberInfo","props","className","this","memberName","memberPosition","memberEducation","memberAbout","Component","Slide","state","title","isEditingTitle","content","isEditingContent","showTitle","bind","titleChange","contentChange","showEditor","renderTitle","showContent","showContentEditor","renderContent","prepareText","event","setState","onClick","value","onChange","onBlur","target","console","log","text","split","map","data","id","slideId","src","logo","TitleSlide","getProjectName","getProjectTeamName","getProjectEmail","getProjectPhone","slideData","projectName","length","projectTeamName","projectEmail","projectPhone","TeamInfoSlide","Content","titleSlideData","teamSlideData","teamName","slides","UserData","userData","memberNameChange","memberPositionChange","memberAboutChange","memberEducationChange","handleSubmit","callbackGetter","userId","dataGetter","htmlFor","type","name","placeholder","maxLength","required","ProjectData","projectNameChange","projectTeamNameChange","projectEmailChange","projectPhoneChange","App","count","projectData","teamMembers","projectDataCallback","teamMemberCallbacks","newSlide","newMember","deleteMember","getUserData","getProjectData","getProjectDataCallback","getTeamMemberCallback","generatePdf","concat","pop","userDataCallback","callback","preventDefault","element","document","getElementById","width","children","clientWidth","height","clientHeight","opt","filename","image","quality","jsPDF","unit","format","orientation","html2pdf","set","from","toContainer","toCanvas","toImg","toPdf","save","onSubmit","ReactDOM","render"],"mappings":"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","file":"static/js/main.457a1228.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2018.51834c74.png\";","import React, {Component} from 'react';\nimport './Slide.css';\n\nexport class TeamMemberInfo extends Component{\n    constructor(props) {\n        super(props);\n\n        // this.getMemberName = this.getMemberName.bind(this)\n    }\n\n    // getMemberName() {\n    //     if (this.props.memberName.length === 0) {\n    //         return \"Имя Фамилия\"\n    //     } else {\n    //         return this.props.memberName\n    //     }\n    // }\n\n    render() {\n        return (\n            <div className=\"Person\">\n                <div className=\"photo\">photo</div>\n                <div className=\"Info\">{this.props.memberName}</div>\n                <div className=\"Info\">{this.props.memberPosition}</div>\n                <div className=\"Info\">{this.props.memberEducation}</div>\n                {/*<div className=\"Info\">Почта</div>*/}\n                {/*<div className=\"Info\">Телефон</div>*/}\n                <div className=\"About\">{this.props.memberAbout}</div>\n                </div>\n        );\n    }\n}\n\n// <div className=\"Person\">\n    // <div className=\"photo\">photo</div>\n    // <div className=\"Info\">Имя и фамилия</div>\n    // <div className=\"Info\">Роль</div>\n    // <div className=\"Info\">Вуз/направление</div>\n    // <div className=\"Info\">Роль</div>\n    // <div className=\"Info\">Почта</div>\n    // <div className=\"Info\">Телефон</div>\n    // <div className=\"About\">О себе</div>\n    // </div>","import React, {Component} from 'react';\nimport './Slide.css';\nimport logo from \"./logo2018.png\";\nimport {TeamMemberInfo} from \"./TeamMemberInfo\";\n\nexport class Slide extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            title : 'Название',\n            isEditingTitle : false,\n            content: 'content',\n            isEditingContent: false\n        }\n\n        this.showTitle = this.showTitle.bind(this)\n        this.titleChange = this.titleChange.bind(this)\n        this.contentChange = this.contentChange.bind(this)\n        this.showEditor = this.showEditor.bind(this)\n        this.renderTitle = this.renderTitle.bind(this)\n        this.showContent = this.showContent.bind(this)\n        this.showContentEditor = this.showContentEditor.bind(this)\n        this.renderContent = this.renderContent.bind(this)\n        this.prepareText = this.prepareText.bind(this)\n    }\n\n    showEditor(event) {\n        this.setState({isEditingTitle: false})\n    }\n\n    showTitle(event) {\n        this.setState({isEditingTitle: true})\n    }\n\n    showContentEditor(event) {\n        this.setState({isEditingContent: false})\n    }\n\n    showContent(event) {\n        // if (event.keyCode === 13) {\n            this.setState({isEditingContent: true})\n        // }\n    }\n\n    renderTitle() {\n        if (!this.state.isEditingTitle)\n        {\n                return <textarea\n                    className=\"message\"\n                    value={this.state.title}\n                    onChange={this.titleChange}\n                    onBlur={this.showTitle}\n                />\n        }\n        else\n        {\n            return <div className=\"message\" onClick={this.showEditor} ><h1>{this.state.title}</h1></div>\n        }\n    }\n\n    renderContent() {\n        if (!this.state.isEditingContent)\n        {\n            return <textarea\n                className=\"Team\"\n                value={this.state.content}\n                onChange={this.contentChange}\n                onBlur={this.showContent}\n            />\n        }\n        else\n        {\n            return <div className=\"Team\" onClick={this.showContentEditor} >{this.prepareText(this.state.content)}</div>\n        }\n    }\n\n    titleChange(event) {\n        this.setState({title: event.target.value})\n    }\n\n    contentChange(event) {\n        console.log(typeof event.target.value)\n        this.setState({content: event.target.value})\n    }\n\n    prepareText(text) {\n        console.log(typeof text)\n        return (<div>\n            {text.split('\\n').map(data => {\n                return <p>{data}</p>\n            })}\n        </div>);\n    }\n\n    render() {\n        return (\n        <div className=\"Slide\" id={this.props.slideId}>\n            {/*<div className=\"TeamTitle\">{this.props.teamName}</div>*/}\n            <img className=\"Logo_sol\" src={logo} />\n            {this.renderTitle()}\n            {this.renderContent()}\n        </div>\n        );\n\n    }\n}\n\nexport default Slide;\n","import React, {Component} from 'react';\nimport './Slide.css';\nimport logo from \"./logo2018.png\"\n\nexport class TitleSlide extends Component{\n    constructor(props) {\n        super(props);\n\n        this.getProjectName = this.getProjectName.bind(this);\n        this.getProjectTeamName = this.getProjectTeamName.bind(this);\n        this.getProjectEmail = this.getProjectEmail.bind(this);\n        this.getProjectPhone = this.getProjectPhone.bind(this);\n    }\n\n    getProjectName() {\n        if (this.props.slideData.projectName.length === 0) {\n            return \"Название проекта\"\n        } else {\n            return this.props.slideData.projectName\n        }\n    }\n\n    getProjectTeamName() {\n        if (this.props.slideData.projectTeamName.length === 0) {\n            return \"Название команды\"\n        } else {\n            return this.props.slideData.projectTeamName\n        }\n    }\n\n    getProjectEmail() {\n        if (this.props.slideData.projectEmail.length === 0) {\n            return \"Email\"\n        } else {\n            return this.props.slideData.projectEmail\n        }\n    }\n\n    getProjectPhone() {\n        if (this.props.slideData.projectPhone.length === 0) {\n            return \"Телефон\"\n        } else {\n            return this.props.slideData.projectPhone\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Slide title-slide\">\n                <img src={logo} className=\"Logo_Titul\" />\n                <div className=\"Title\"><h1>{this.getProjectName()}</h1></div>\n                <div className=\"TeamName\">{this.getProjectTeamName()}</div>\n                <div className=\"LeadMail\">{this.getProjectEmail()}</div>\n                <div className=\"LeadPhone\">{this.getProjectPhone()}</div>\n            </div>\n        );\n    }\n}\n\n// <body>\n// <div class=\"Slide\">\n\n// </div>\n// </body>\n// </html>","import React, {Component} from 'react';\nimport './Slide.css';\nimport {TeamMemberInfo} from \"./TeamMemberInfo\";\nimport logo from \"./logo2018.png\"\n\nexport class TeamInfoSlide extends Component{\n\n    render() {\n        return (\n            <div className=\"Slide\" /*id={this.props.slideId}*/>\n                {/*<div className=\"TeamTitle\">{this.props.teamName}</div>*/}\n                <img className=\"Logo_sol\" src={logo} />\n                {\n                    <div className=\"message\"><h1>Состав команды</h1></div>\n                }\n                <div className=\"Team\">\n                {/*<ul className=\"team-members-list\">*/}\n                    {this.props.slideData.map(data => {\n                        return (\n                            <TeamMemberInfo\n                                memberName={data.memberName}\n                                memberPosition={data.memberPosition}\n                                memberEducation={data.memberEducation}\n                                memberAbout={data.memberAbout}\n                            />\n                        );\n                    })}\n                {/*</ul>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\n// <div class = \"Slide\">\n//     <div style=\"width:30%;  height: 10% ;margin-top: 2%;\n//     margin-left: 3%;\n//     float:left;    outline: 1px solid black;\n//     background: lightgray;\">Команда</div>\n//     <div class = \"Logo_sol\">Лого</div>\n//     <div class = \"message\">message</div>\n//     <div class =\"Team\">\n//         <div class = \"Person\">\n//             <div class = \"photo\">photo</div>\n//             <div class= \"Info\">Имя и фамилия</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Вуз/направление</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Почта</div>\n//             <div class= \"Info\">Телефон</div>\n//             <div class= \"About\">О себе</div>\n//         </div>\n//         <div class = \"Person\">\n//             <div class = \"photo\">photo</div>\n//             <div class= \"Info\">Имя и фамилия</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Вуз/направление</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Почта</div>\n//             <div class= \"Info\">Телефон</div>\n//             <div class= \"About\">О себе</div>\n//         </div>\n//         <div class = \"Person\">\n//             <div class = \"photo\">photo</div>\n//             <div class= \"Info\">Имя и фамилия</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Вуз/направление</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Почта</div>\n//             <div class= \"Info\">Телефон</div>\n//             <div class= \"About\">О себе</div>\n//         </div>\n//         <div class = \"Person\">\n//             <div class = \"photo\">photo</div>\n//             <div class= \"Info\">Имя и фамилия</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Вуз/направление</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Почта</div>\n//             <div class= \"Info\">Телефон</div>\n//             <div class= \"About\">О себе</div>\n//         </div>\n//         <div class = \"Person\">\n//             <div class = \"photo\">photo</div>\n//             <div class= \"Info\">Имя и фамилия</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Вуз/направление</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Почта</div>\n//             <div class= \"Info\">Телефон</div>\n//             <div class= \"About\">О себе</div>\n//         </div>\n//         <div class = \"Person\">\n//             <div class = \"photo\">photo</div>\n//             <div class= \"Info\">Имя и фамилия</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Вуз/направление</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Почта</div>\n//             <div class= \"Info\">Телефон</div>\n//             <div class= \"About\">О себе</div>\n//         </div>\n//     </div>\n//\n//\n// </div>\n// </body>\n// </html>\n","import React, {Component} from 'react';\n\nimport Slide from \"../slide/Slide\";\nimport {TitleSlide} from \"../slide/TitleSlide\";\nimport {TeamInfoSlide} from \"../slide/TeamInfoSlide\";\nimport './Content.css'\n\nexport class Content extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n          <div id=\"content\">\n              <TitleSlide slideData={this.props.titleSlideData}/>\n              <TeamInfoSlide slideData={this.props.teamSlideData} teamName={this.props.teamSlideData.projectTeamName}/>\n              {this.props.slides.map(slideId => {\n                  return <Slide slideId={slideId}/>\n              })}\n          </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport \"./Forms.css\"\nexport class UserData extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: {\n                memberName: '',\n                memberPosition: '',\n                memberAbout: '',\n                memberEducation: ''\n            }\n        }\n\n        this.memberNameChange = this.memberNameChange.bind(this);\n        this.memberPositionChange = this.memberPositionChange.bind(this);\n        this.memberAboutChange = this.memberAboutChange.bind(this);\n        this.memberEducationChange = this.memberEducationChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.props.callbackGetter(this.props.userId, this.handleSubmit)\n    }\n\n    memberNameChange(event) {\n        this.setState({memberName: event.target.value});\n    }\n\n    memberPositionChange(event) {\n        this.setState({memberPosition: event.target.value});\n    }\n\n    memberAboutChange(event) {\n        this.setState({memberAbout: event.target.value});\n    }\n\n    memberEducationChange(event) {\n        this.setState({memberEducation: event.target.value});\n    }\n\n    handleSubmit() {\n        this.props.dataGetter(this.props.userId, this.state)\n        // event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"user-data\">\n                    <label htmlFor={\"memberName-\" + this.props.userId}>Имя Фамилия</label><br/>\n                    <input\n                        type=\"text\"\n                        className=\"input-form\"\n                        name={\"memberName-\" + this.props.userId}\n                        placeholder=\"Иван Иванов\"\n                        id=\"memberName\"\n                        value={this.state.memberName}\n                        onChange={this.memberNameChange}\n                        maxLength=\"30\"\n                        required\n                    />\n                    <br/>\n                    <label htmlFor={\"memberPosition\" + this.props.userId}>Должность</label><br/>\n                    <input\n                        type=\"text\"\n                        className=\"input-form\"\n                        name={\"memberPosition\" + this.props.userId}\n                        placeholder=\"Разработчик, Менеджер...\"\n                        id=\"memberPosition\"\n                        value={this.state.memberPosition}\n                        onChange={this.memberPositionChange}\n                        maxLength=\"30\"\n                        required\n                    />\n                    <br/>\n\n                    <label htmlFor={\"memberEducation\" + this.props.userId}>Учебное заведение</label><br/>\n                    <input\n                        type=\"text\"\n                        className=\"input-form\"\n                        name={\"memberEducation\" + this.props.userId}\n                        placeholder=\"MIT\"\n                        id=\"memberEducation\"\n                        value={this.state.memberEducation}\n                        onChange={this.memberEducationChange}\n                        maxLength=\"30\"\n                        required\n                    />\n                    <br/>\n\n                    <label htmlFor={\"memberAbout\" + this.props.userId}>Дополнительная Информация</label><br/>\n                    <textarea\n                        name={\"memberAbout\" + this.props.userId}\n                        className=\"input-form\"\n                        id=\"memberAbout\"\n                        maxLength=\"100\"\n                        value={this.state.memberAbout}\n                        onChange={this.memberAboutChange}\n                    />\n                    <br/>\n\n                    {/*<input type=\"submit\" name=\"submit\" value=\"Отправить\"/>*/}\n            </div>\n        );\n    }\n}\n\n// <script type=\"text/javascript\">\n//     let person=\n//     {\n//         firstLastName:'',\n//         email:'',\n//         phone:'',\n//         about:'',\n//     }\n//     function getInfo(form)\n//     {\n//         person.firstLastName=form.FirstLastName.value;\n//         person.email=form.Email.value;\n//         person.phone=form.Phone.value;\n//         person.about=form.About.value;\n//         console.log(person)\n//     }\n// </script>\n// <form action=\"\" method=\"get\"  name =\"form\" id=\"form\">\n//     <label for=\"FirstLastName\">Имя Фамилия</label><br />\n//     <input type=\"text\" name=\"FirstLastName\" placeholder=\"Иван Иванов\" id =\"FirstLastName\" required><br />\n//\n//         <label for=\"Email\">Email</label><br />\n//         <input type=\"email\" name=\"Email\" placeholder=\"ivanov@mail.ru\" id =\"Email\" required><br />\n//\n//             <label for=\"Phone\">Телефон</label><br />\n//             <input type=\"tel\" name=\"Phone\"  id =\"Phone\"  pattern=\"8 [0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}\"><br />\n//\n//                 <label>О себе</label><br />\n//                 <textarea name=\"About\" maxlength=\"100\"></textarea> <br />\n//\n//                 <input type=\"button\" onclick=\"getInfo(document.getElementById('form'))\" name=\"submit\" value=\"Отправить\"/>\n// </form>\n// </body>\n// </html>","import React, {Component} from 'react';\n\nexport class ProjectData extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: {\n                projectName: '',\n                projectTeamName: '',\n                projectEmail: '',\n                projectPhone: '',\n            }\n        }\n\n        this.projectNameChange = this.projectNameChange.bind(this);\n        this.projectTeamNameChange = this.projectTeamNameChange.bind(this);\n        this.projectEmailChange = this.projectEmailChange.bind(this);\n        this.projectPhoneChange = this.projectPhoneChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.props.callbackGetter(this.handleSubmit)\n    }\n\n    projectNameChange(event) {\n        this.setState({projectName: event.target.value});\n    }\n\n    projectTeamNameChange(event) {\n        this.setState({projectTeamName: event.target.value});\n    }\n\n    projectEmailChange(event) {\n        this.setState({projectEmail: event.target.value});\n    }\n\n    projectPhoneChange(event) {\n        this.setState({projectPhone: event.target.value});\n    }\n\n    handleSubmit() {\n        this.props.dataGetter(this.state)\n        // event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"user-data\">\n                {/*<form id=\"form\" onSubmit={this.handleSubmit}>*/}\n                    <label htmlFor=\"projectName\">Название проекта</label><br/>\n                    <input\n                        className=\"input-form\"\n                        type=\"text\"\n                        name=\"projectName\"\n                        placeholder=\"Название проекта\"\n                        id=\"projectName\"\n                        value={this.state.projectName}\n                        onChange={this.projectNameChange}\n                        maxLength=\"30\"\n                        required\n                    />\n                    <br/>\n                    <label htmlFor=\"projectTeamName\">Название команды</label><br/>\n                    <input\n                        type=\"text\"\n                        className=\"input-form\"\n                        name=\"projectTeamName\"\n                        placeholder=\"Название Команды\"\n                        id=\"projectTeamName\"\n                        value={this.state.projectTeamName}\n                        onChange={this.projectTeamNameChange}\n                        maxLength=\"30\"\n                        required\n                    />\n                    <br/>\n                    <label htmlFor=\"projectEmail\">Email</label><br/>\n                    <input\n                        type=\"email\"\n                        className=\"input-form\"\n                        name=\"projectEmail\"\n                        placeholder=\"team_mail@example.com\"\n                        id=\"projectEmail\"\n                        value={this.state.projectEmail}\n                        onChange={this.projectEmailChange}\n                        required\n                    />\n                    <br/>\n\n                    <label htmlFor=\"projectPhone\">Телефон</label><br/>\n                    <input\n                        type=\"tel\"\n                        className=\"input-form\"\n                        name=\"projectPhone\"\n                        id=\"projectPhone\"\n                        // pattern=\"+7-[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n                        value={this.state.projectPhone}\n                        onChange={this.projectPhoneChange}\n                        required\n                    />\n                    <br/>\n                    {/*<input type=\"submit\" name=\"submit\" value=\"Отправить\"/>*/}\n                {/*</form>*/}\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\n\nexport class ImageUploader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {file: '',imagePreviewUrl: ''};\n    }\n\n    _handleSubmit(e) {\n        e.preventDefault();\n        // TODO: do something with -> this.state.file\n        console.log('handle uploading-', this.state.file);\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n\n        reader.onloadend = () => {\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n        }\n\n        reader.readAsDataURL(file)\n    }\n\n    render() {\n        // let {imagePreviewUrl} = this.state;\n        // let $imagePreview = null;\n        // if (imagePreviewUrl) {\n        //     $imagePreview = (<img src={imagePreviewUrl} />);\n        // } else {\n        //     $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n        // }\n\n        return (\n            <div className=\"previewComponent\">\n                {/*<form onSubmit={(e)=>this._handleSubmit(e)}>*/}\n                {/*    <input className=\"fileInput\"*/}\n                {/*           type=\"file\"*/}\n                {/*           onChange={(e)=>this._handleImageChange(e)} />*/}\n                {/*    <button className=\"submitButton\"*/}\n                {/*            type=\"submit\"*/}\n                {/*            onClick={(e)=>this._handleSubmit(e)}>Upload Image</button>*/}\n                {/*</form>*/}\n                {/*<div className=\"imgPreview\">*/}\n                {/*    /!*{$imagePreview}*!/*/}\n                {/*</div>*/}\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport './App.css';\nimport {Content} from \"./content/Content\";\nimport {UserData} from \"./forms/UserData\";\nimport {ProjectData} from \"./forms/ProjectData\";\nimport {ImageUploader} from \"./forms/ImageUploader\";\nimport html2pdf from 'html2pdf.js'\n\nexport class App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            slides : [],\n            count : 0,\n            projectData : {\n                projectName: '',\n                projectTeamName: '',\n                projectEmail: '',\n                projectPhone: '',\n\n            },\n            teamMembers : [],\n            projectDataCallback : () => {},\n            teamMemberCallbacks : []\n        }\n        this.newSlide = this.newSlide.bind(this);\n        this.newMember = this.newMember.bind(this);\n        this.deleteMember = this.deleteMember.bind(this);\n        this.getUserData = this.getUserData.bind(this);\n        this.getProjectData = this.getProjectData.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.getProjectDataCallback = this.getProjectDataCallback.bind(this)\n        this.getTeamMemberCallback = this.getTeamMemberCallback.bind(this)\n        this.generatePdf = this.generatePdf.bind(this)\n    }\n\n\n    newSlide() {\n        const id = `slide-id-${this.state.count}`\n        this.setState(state => {\n            return {\n                count: state.count + 1,\n                slides: state.slides.concat([id])\n            }\n        })\n    }\n\n    newMember () {\n        if (this.state.teamMembers.length < 4) {\n            this.setState(state => {\n                return {\n                    teamMembers: state.teamMembers.concat([state.teamMembers.length]),\n                    teamMemberCallbacks: state.teamMemberCallbacks.concat([() => {}])\n                }\n            })\n        }\n    }\n\n    deleteMember () {\n        if (this.state.teamMembers.length > 0) {\n            this.setState(state => {\n                state.teamMembers.pop()\n                state.teamMemberCallbacks.pop()\n                return {\n                    teamMembers: state.teamMembers,\n                    teamMemberCallbacks: state.teamMemberCallbacks\n                }\n            })\n        }\n    }\n\n    getUserData(id, userData) {\n        console.log(id)\n        console.log(userData)\n        this.setState(state => {\n            state.teamMembers[id] = userData\n            return {\n                teamMembers: state.teamMembers\n            }\n        })\n    }\n\n    getProjectData(projectData) {\n        // console.log(projectData)\n        this.setState(state => {\n            return {\n                projectData: projectData\n            }\n        })\n    }\n\n    getTeamMemberCallback(id, userDataCallback) {\n        this.setState(state => {\n            state.teamMemberCallbacks[id] = userDataCallback\n            return {\n                teamMemberCallbacks: state.teamMemberCallbacks\n            }\n        })\n    }\n\n    getProjectDataCallback(projectDataCallback) {\n        this.setState(state => {\n            return {\n                projectDataCallback: projectDataCallback\n            }\n        })\n    }\n\n    handleSubmit(event) {\n        this.state.projectDataCallback()\n        this.state.teamMemberCallbacks.map(callback => callback())\n        event.preventDefault();\n    }\n\n    generatePdf(){\n        var element = document.getElementById(\"content\")\n        var width = element.children[0].clientWidth+4\n        var height = element.children[0].clientHeight+4\n\n        console.log(width)\n        console.log(height)\n        var opt = {\n            filename:     'presentation.pdf',\n            image :       {type : 'jpeg', quality: 1} ,\n            // html2canvas:  {width: width, height: height},\n            jsPDF:        {unit: 'px', format: [width, height], orientation: 'l'}\n        };\n        html2pdf().set(opt).from(element).toContainer().toCanvas().toImg().toPdf().save();\n    }\n\n    render() {\n        return (\n            <div className=\"\">\n                <form id=\"form\" onSubmit={this.handleSubmit}>\n                    <div className=\"row menu\">\n                        <button className=\"App-button col-md-3\" type=\"submit\" name=\"submit\">Генерировать</button>\n                        <button type=\"button\" className=\"App-button col-md-3\" onClick={this.newMember}>Добавить Участника</button>\n                        <button type=\"button\" className=\"App-button col-md-3\" onClick={this.deleteMember}>Удалить Участника</button>\n                        <button type=\"button\" className=\"App-button col-md-3\" onClick={this.generatePdf}>Получить PDF</button>\n                    </div>\n                    <div className=\"data-inputs\">\n                        <ProjectData dataGetter={this.getProjectData} callbackGetter={this.getProjectDataCallback} />\n                        <div className=\"align-items-center\">\n                        {this.state.teamMembers.map(userId => {\n                            return <UserData userId={userId} dataGetter={this.getUserData} callbackGetter={this.getTeamMemberCallback}/>\n                        })}\n                        </div>\n                    </div>\n                </form>\n                {/*<ImageUploader />*/}\n                <div className=\"\">\n                  <Content slides={this.state.slides} titleSlideData={this.state.projectData} teamSlideData={this.state.teamMembers}/>\n                  <button type=\"button\" className=\"App-button\" onClick={this.newSlide}>Add Slide</button>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}