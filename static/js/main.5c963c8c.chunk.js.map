{"version":3,"sources":["slide/logo2018.png","slide/TeamMemberInfo.js","slide/Slide.js","slide/TitleSlide.js","slide/TeamInfoSlide.js","content/Content.js","forms/UserData.js","forms/ProjectData.js","App.js","forms/ImageUploader.js","index.js"],"names":["module","exports","TeamMemberInfo","props","className","this","memberName","memberPosition","memberEducation","memberAbout","Component","Slide","id","slideId","src","logo","title","TitleSlide","getProjectName","bind","getProjectTeamName","getProjectEmail","getProjectPhone","slideData","projectName","length","projectTeamName","projectEmail","projectPhone","TeamInfoSlide","map","data","Content","state","titleSlideData","teamSlideData","teamName","slides","UserData","userData","memberNameChange","memberPositionChange","memberAboutChange","memberEducationChange","handleSubmit","callbackGetter","userId","event","setState","target","value","dataGetter","htmlFor","type","name","placeholder","onChange","maxLength","required","ProjectData","projectNameChange","projectTeamNameChange","projectEmailChange","projectPhoneChange","App","count","projectData","teamMembers","projectDataCallback","teamMemberCallbacks","newSlide","newMember","deleteMember","getUserData","getProjectData","getProjectDataCallback","getTeamMemberCallback","generatePdf","concat","pop","console","log","userDataCallback","callback","preventDefault","onSubmit","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c963c8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2018.51834c74.png\";","import React, {Component} from 'react';\nimport './Slide.css';\n\nexport class TeamMemberInfo extends Component{\n    constructor(props) {\n        super(props);\n\n        // this.getMemberName = this.getMemberName.bind(this)\n    }\n\n    // getMemberName() {\n    //     if (this.props.memberName.length === 0) {\n    //         return \"Имя Фамилия\"\n    //     } else {\n    //         return this.props.memberName\n    //     }\n    // }\n\n    render() {\n        return (\n            <div className=\"Person\">\n                <div className=\"photo\">photo</div>\n                <div className=\"Info\">{this.props.memberName}</div>\n                <div className=\"Info\">{this.props.memberPosition}</div>\n                <div className=\"Info\">{this.props.memberEducation}</div>\n                {/*<div className=\"Info\">Почта</div>*/}\n                {/*<div className=\"Info\">Телефон</div>*/}\n                <div className=\"About\">{this.props.memberAbout}</div>\n                </div>\n        );\n    }\n}\n\n// <div className=\"Person\">\n    // <div className=\"photo\">photo</div>\n    // <div className=\"Info\">Имя и фамилия</div>\n    // <div className=\"Info\">Роль</div>\n    // <div className=\"Info\">Вуз/направление</div>\n    // <div className=\"Info\">Роль</div>\n    // <div className=\"Info\">Почта</div>\n    // <div className=\"Info\">Телефон</div>\n    // <div className=\"About\">О себе</div>\n    // </div>","import React, {Component} from 'react';\nimport './Slide.css';\nimport logo from \"./logo2018.png\";\nimport {TeamMemberInfo} from \"./TeamMemberInfo\";\n\nexport class Slide extends Component{\n    render() {\n        return (\n        <div className=\"Slide\" id={this.props.slideId}>\n            {/*<div className=\"TeamTitle\">{this.props.teamName}</div>*/}\n            <img className=\"Logo_sol\" src={logo} />\n            <div className=\"message\"><h1>{this.props.title}</h1></div>\n            <div className=\"body\"><h1>{this.props.title}</h1></div>\n        </div>\n        );\n\n    }\n}\n\nexport default Slide;\n","import React, {Component} from 'react';\nimport './Slide.css';\nimport logo from \"./logo2018.png\"\n\nexport class TitleSlide extends Component{\n    constructor(props) {\n        super(props);\n\n        this.getProjectName = this.getProjectName.bind(this);\n        this.getProjectTeamName = this.getProjectTeamName.bind(this);\n        this.getProjectEmail = this.getProjectEmail.bind(this);\n        this.getProjectPhone = this.getProjectPhone.bind(this);\n    }\n\n    getProjectName() {\n        if (this.props.slideData.projectName.length === 0) {\n            return \"Название проекта\"\n        } else {\n            return this.props.slideData.projectName\n        }\n    }\n\n    getProjectTeamName() {\n        if (this.props.slideData.projectTeamName.length === 0) {\n            return \"Название команды\"\n        } else {\n            return this.props.slideData.projectTeamName\n        }\n    }\n\n    getProjectEmail() {\n        if (this.props.slideData.projectEmail.length === 0) {\n            return \"Email\"\n        } else {\n            return this.props.slideData.projectEmail\n        }\n    }\n\n    getProjectPhone() {\n        if (this.props.slideData.projectPhone.length === 0) {\n            return \"Телефон\"\n        } else {\n            return this.props.slideData.projectPhone\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Slide title-slide\">\n                <img src={logo} className=\"Logo_Titul\" />\n                <div className=\"Title\"><h1>{this.getProjectName()}</h1></div>\n                <div className=\"TeamName\">{this.getProjectTeamName()}</div>\n                <div className=\"LeadMail\">{this.getProjectEmail()}</div>\n                <div className=\"LeadPhone\">{this.getProjectPhone()}</div>\n            </div>\n        );\n    }\n}\n\n// <body>\n// <div class=\"Slide\">\n\n// </div>\n// </body>\n// </html>","import React, {Component} from 'react';\nimport './Slide.css';\nimport {TeamMemberInfo} from \"./TeamMemberInfo\";\nimport logo from \"./logo2018.png\"\n\nexport class TeamInfoSlide extends Component{\n    render() {\n        return (\n            <div className=\"Slide\" /*id={this.props.slideId}*/>\n                {/*<div className=\"TeamTitle\">{this.props.teamName}</div>*/}\n                <img className=\"Logo_sol\" src={logo} />\n                <div className=\"message\"><h1>Состав команды</h1></div>\n                <div className=\"Team\">\n                {/*<ul className=\"team-members-list\">*/}\n                    {this.props.slideData.map(data => {\n                        return (\n                            <TeamMemberInfo\n                                memberName={data.memberName}\n                                memberPosition={data.memberPosition}\n                                memberEducation={data.memberEducation}\n                                memberAbout={data.memberAbout}\n                            />\n                        );\n                    })}\n                {/*</ul>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\n// <div class = \"Slide\">\n//     <div style=\"width:30%;  height: 10% ;margin-top: 2%;\n//     margin-left: 3%;\n//     float:left;    outline: 1px solid black;\n//     background: lightgray;\">Команда</div>\n//     <div class = \"Logo_sol\">Лого</div>\n//     <div class = \"message\">message</div>\n//     <div class =\"Team\">\n//         <div class = \"Person\">\n//             <div class = \"photo\">photo</div>\n//             <div class= \"Info\">Имя и фамилия</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Вуз/направление</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Почта</div>\n//             <div class= \"Info\">Телефон</div>\n//             <div class= \"About\">О себе</div>\n//         </div>\n//         <div class = \"Person\">\n//             <div class = \"photo\">photo</div>\n//             <div class= \"Info\">Имя и фамилия</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Вуз/направление</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Почта</div>\n//             <div class= \"Info\">Телефон</div>\n//             <div class= \"About\">О себе</div>\n//         </div>\n//         <div class = \"Person\">\n//             <div class = \"photo\">photo</div>\n//             <div class= \"Info\">Имя и фамилия</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Вуз/направление</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Почта</div>\n//             <div class= \"Info\">Телефон</div>\n//             <div class= \"About\">О себе</div>\n//         </div>\n//         <div class = \"Person\">\n//             <div class = \"photo\">photo</div>\n//             <div class= \"Info\">Имя и фамилия</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Вуз/направление</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Почта</div>\n//             <div class= \"Info\">Телефон</div>\n//             <div class= \"About\">О себе</div>\n//         </div>\n//         <div class = \"Person\">\n//             <div class = \"photo\">photo</div>\n//             <div class= \"Info\">Имя и фамилия</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Вуз/направление</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Почта</div>\n//             <div class= \"Info\">Телефон</div>\n//             <div class= \"About\">О себе</div>\n//         </div>\n//         <div class = \"Person\">\n//             <div class = \"photo\">photo</div>\n//             <div class= \"Info\">Имя и фамилия</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Вуз/направление</div>\n//             <div class= \"Info\">Роль</div>\n//             <div class= \"Info\">Почта</div>\n//             <div class= \"Info\">Телефон</div>\n//             <div class= \"About\">О себе</div>\n//         </div>\n//     </div>\n//\n//\n// </div>\n// </body>\n// </html>\n","import React, {Component} from 'react';\n\nimport Slide from \"../slide/Slide\";\nimport {TitleSlide} from \"../slide/TitleSlide\";\nimport {TeamInfoSlide} from \"../slide/TeamInfoSlide\";\n\nexport class Content extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n          <div className=\"align-items-center\">\n              <TitleSlide slideData={this.props.titleSlideData}/>\n              <TeamInfoSlide slideData={this.props.teamSlideData} teamName={this.props.teamSlideData.projectTeamName}/>\n              {this.props.slides.map(slideId => {\n                  return <Slide slideId={slideId}/>\n              })}\n          </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport \"./Forms.css\"\nexport class UserData extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: {\n                memberName: '',\n                memberPosition: '',\n                memberAbout: '',\n                memberEducation: ''\n            }\n        }\n\n        this.memberNameChange = this.memberNameChange.bind(this);\n        this.memberPositionChange = this.memberPositionChange.bind(this);\n        this.memberAboutChange = this.memberAboutChange.bind(this);\n        this.memberEducationChange = this.memberEducationChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.props.callbackGetter(this.props.userId, this.handleSubmit)\n    }\n\n    memberNameChange(event) {\n        this.setState({memberName: event.target.value});\n    }\n\n    memberPositionChange(event) {\n        this.setState({memberPosition: event.target.value});\n    }\n\n    memberAboutChange(event) {\n        this.setState({memberAbout: event.target.value});\n    }\n\n    memberEducationChange(event) {\n        this.setState({memberEducation: event.target.value});\n    }\n\n    handleSubmit() {\n        this.props.dataGetter(this.props.userId, this.state)\n        // event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"user-data\">\n                    <label htmlFor={\"memberName-\" + this.props.userId}>Имя Фамилия</label><br/>\n                    <input\n                        type=\"text\"\n                        className=\"input-form\"\n                        name={\"memberName-\" + this.props.userId}\n                        placeholder=\"Иван Иванов\"\n                        id=\"memberName\"\n                        value={this.state.memberName}\n                        onChange={this.memberNameChange}\n                        maxLength=\"30\"\n                        required\n                    />\n                    <br/>\n                    <label htmlFor={\"memberPosition\" + this.props.userId}>Должность</label><br/>\n                    <input\n                        type=\"text\"\n                        className=\"input-form\"\n                        name={\"memberPosition\" + this.props.userId}\n                        placeholder=\"Разработчик, Менеджер...\"\n                        id=\"memberPosition\"\n                        value={this.state.memberPosition}\n                        onChange={this.memberPositionChange}\n                        maxLength=\"30\"\n                        required\n                    />\n                    <br/>\n\n                    <label htmlFor={\"memberEducation\" + this.props.userId}>Учебное заведение</label><br/>\n                    <input\n                        type=\"text\"\n                        className=\"input-form\"\n                        name={\"memberEducation\" + this.props.userId}\n                        placeholder=\"MIT\"\n                        id=\"memberEducation\"\n                        value={this.state.memberEducation}\n                        onChange={this.memberEducationChange}\n                        maxLength=\"30\"\n                        required\n                    />\n                    <br/>\n\n                    <label htmlFor={\"memberAbout\" + this.props.userId}>Дополнительная Информация</label><br/>\n                    <textarea\n                        name={\"memberAbout\" + this.props.userId}\n                        className=\"input-form\"\n                        id=\"memberAbout\"\n                        maxLength=\"100\"\n                        value={this.state.memberAbout}\n                        onChange={this.memberAboutChange}\n                    />\n                    <br/>\n\n                    {/*<input type=\"submit\" name=\"submit\" value=\"Отправить\"/>*/}\n            </div>\n        );\n    }\n}\n\n// <script type=\"text/javascript\">\n//     let person=\n//     {\n//         firstLastName:'',\n//         email:'',\n//         phone:'',\n//         about:'',\n//     }\n//     function getInfo(form)\n//     {\n//         person.firstLastName=form.FirstLastName.value;\n//         person.email=form.Email.value;\n//         person.phone=form.Phone.value;\n//         person.about=form.About.value;\n//         console.log(person)\n//     }\n// </script>\n// <form action=\"\" method=\"get\"  name =\"form\" id=\"form\">\n//     <label for=\"FirstLastName\">Имя Фамилия</label><br />\n//     <input type=\"text\" name=\"FirstLastName\" placeholder=\"Иван Иванов\" id =\"FirstLastName\" required><br />\n//\n//         <label for=\"Email\">Email</label><br />\n//         <input type=\"email\" name=\"Email\" placeholder=\"ivanov@mail.ru\" id =\"Email\" required><br />\n//\n//             <label for=\"Phone\">Телефон</label><br />\n//             <input type=\"tel\" name=\"Phone\"  id =\"Phone\"  pattern=\"8 [0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}\"><br />\n//\n//                 <label>О себе</label><br />\n//                 <textarea name=\"About\" maxlength=\"100\"></textarea> <br />\n//\n//                 <input type=\"button\" onclick=\"getInfo(document.getElementById('form'))\" name=\"submit\" value=\"Отправить\"/>\n// </form>\n// </body>\n// </html>","import React, {Component} from 'react';\n\nexport class ProjectData extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userData: {\n                projectName: '',\n                projectTeamName: '',\n                projectEmail: '',\n                projectPhone: '',\n            }\n        }\n\n        this.projectNameChange = this.projectNameChange.bind(this);\n        this.projectTeamNameChange = this.projectTeamNameChange.bind(this);\n        this.projectEmailChange = this.projectEmailChange.bind(this);\n        this.projectPhoneChange = this.projectPhoneChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.props.callbackGetter(this.handleSubmit)\n    }\n\n    projectNameChange(event) {\n        this.setState({projectName: event.target.value});\n    }\n\n    projectTeamNameChange(event) {\n        this.setState({projectTeamName: event.target.value});\n    }\n\n    projectEmailChange(event) {\n        this.setState({projectEmail: event.target.value});\n    }\n\n    projectPhoneChange(event) {\n        this.setState({projectPhone: event.target.value});\n    }\n\n    handleSubmit() {\n        this.props.dataGetter(this.state)\n        // event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"user-data\">\n                {/*<form id=\"form\" onSubmit={this.handleSubmit}>*/}\n                    <label htmlFor=\"projectName\">Название проекта</label><br/>\n                    <input\n                        className=\"input-form\"\n                        type=\"text\"\n                        name=\"projectName\"\n                        placeholder=\"Название проекта\"\n                        id=\"projectName\"\n                        value={this.state.projectName}\n                        onChange={this.projectNameChange}\n                        maxLength=\"30\"\n                        required\n                    />\n                    <br/>\n                    <label htmlFor=\"projectTeamName\">Название команды</label><br/>\n                    <input\n                        type=\"text\"\n                        className=\"input-form\"\n                        name=\"projectTeamName\"\n                        placeholder=\"Название Команды\"\n                        id=\"projectTeamName\"\n                        value={this.state.projectTeamName}\n                        onChange={this.projectTeamNameChange}\n                        maxLength=\"30\"\n                        required\n                    />\n                    <br/>\n                    <label htmlFor=\"projectEmail\">Email</label><br/>\n                    <input\n                        type=\"email\"\n                        className=\"input-form\"\n                        name=\"projectEmail\"\n                        placeholder=\"team_mail@example.com\"\n                        id=\"projectEmail\"\n                        value={this.state.projectEmail}\n                        onChange={this.projectEmailChange}\n                        required\n                    />\n                    <br/>\n\n                    <label htmlFor=\"projectPhone\">Телефон</label><br/>\n                    <input\n                        type=\"tel\"\n                        className=\"input-form\"\n                        name=\"projectPhone\"\n                        id=\"projectPhone\"\n                        // pattern=\"+7-[0-9]{3}-[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n                        value={this.state.projectPhone}\n                        onChange={this.projectPhoneChange}\n                        required\n                    />\n                    <br/>\n                    {/*<input type=\"submit\" name=\"submit\" value=\"Отправить\"/>*/}\n                {/*</form>*/}\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {Content} from \"./content/Content\";\nimport {UserData} from \"./forms/UserData\";\nimport {ProjectData} from \"./forms/ProjectData\";\nimport {ImageUploader} from \"./forms/ImageUploader\";\n\nexport class App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            slides : [],\n            count : 0,\n            projectData : {\n                projectName: '',\n                projectTeamName: '',\n                projectEmail: '',\n                projectPhone: '',\n\n            },\n            teamMembers : [],\n            projectDataCallback : () => {},\n            teamMemberCallbacks : []\n        }\n        this.newSlide = this.newSlide.bind(this);\n        this.newMember = this.newMember.bind(this);\n        this.deleteMember = this.deleteMember.bind(this);\n        this.getUserData = this.getUserData.bind(this);\n        this.getProjectData = this.getProjectData.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.getProjectDataCallback = this.getProjectDataCallback.bind(this)\n        this.getTeamMemberCallback = this.getTeamMemberCallback.bind(this)\n        this.generatePdf = this.generatePdf.bind(this)\n    }\n\n\n    newSlide() {\n        const id = `slide-id-${this.state.count}`\n        this.setState(state => {\n            return {\n                count: state.count + 1,\n                slides: state.slides.concat([id])\n            }\n        })\n    }\n\n    newMember () {\n        if (this.state.teamMembers.length < 4) {\n            this.setState(state => {\n                return {\n                    teamMembers: state.teamMembers.concat([state.teamMembers.length]),\n                    teamMemberCallbacks: state.teamMemberCallbacks.concat([() => {}])\n                }\n            })\n        }\n    }\n\n    deleteMember () {\n        if (this.state.teamMembers.length > 0) {\n            this.setState(state => {\n                state.teamMembers.pop()\n                state.teamMemberCallbacks.pop()\n                return {\n                    teamMembers: state.teamMembers,\n                    teamMemberCallbacks: state.teamMemberCallbacks\n                }\n            })\n        }\n    }\n\n    getUserData(id, userData) {\n        console.log(id)\n        console.log(userData)\n        this.setState(state => {\n            state.teamMembers[id] = userData\n            return {\n                teamMembers: state.teamMembers\n            }\n        })\n    }\n\n    getProjectData(projectData) {\n        // console.log(projectData)\n        this.setState(state => {\n            return {\n                projectData: projectData\n            }\n        })\n    }\n\n    getTeamMemberCallback(id, userDataCallback) {\n        this.setState(state => {\n            state.teamMemberCallbacks[id] = userDataCallback\n            return {\n                teamMemberCallbacks: state.teamMemberCallbacks\n            }\n        })\n    }\n\n    getProjectDataCallback(projectDataCallback) {\n        this.setState(state => {\n            return {\n                projectDataCallback: projectDataCallback\n            }\n        })\n    }\n\n    handleSubmit(event) {\n        this.state.projectDataCallback()\n        this.state.teamMemberCallbacks.map(callback => callback())\n        event.preventDefault();\n    }\n\n    generatePdf() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"align-items-center\">\n                <form id=\"form\" onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <button className=\"App-button col-md-3\" type=\"submit\" name=\"submit\">Генерировать</button>\n                        <button type=\"button\" className=\"App-button col-md-3\" onClick={this.newMember}>Добавить Участника</button>\n                        <button type=\"button\" className=\"App-button col-md-3\" onClick={this.deleteMember}>Удалить Участника</button>\n                        <button type=\"button\" className=\"App-button col-md-3\" onClick={this.generatePdf}>Получить PDF</button>\n                    </div>\n                    <div className=\"data-inputs\">\n                        <ProjectData dataGetter={this.getProjectData} callbackGetter={this.getProjectDataCallback} />\n                        <div className=\"align-items-center\">\n                        {this.state.teamMembers.map(userId => {\n                            return <UserData userId={userId} dataGetter={this.getUserData} callbackGetter={this.getTeamMemberCallback}/>\n                        })}\n                        </div>\n                    </div>\n                </form>\n                {/*<ImageUploader />*/}\n                <div className=\"container-fluid align-items-center\">\n                  <Content slides={this.state.slides} titleSlideData={this.state.projectData} teamSlideData={this.state.teamMembers}/>\n                  <button type=\"button\" className=\"App-button\" onClick={this.newSlide}>Add Slide</button>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\n\nexport class ImageUploader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {file: '',imagePreviewUrl: ''};\n    }\n\n    _handleSubmit(e) {\n        e.preventDefault();\n        // TODO: do something with -> this.state.file\n        console.log('handle uploading-', this.state.file);\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n\n        reader.onloadend = () => {\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n        }\n\n        reader.readAsDataURL(file)\n    }\n\n    render() {\n        // let {imagePreviewUrl} = this.state;\n        // let $imagePreview = null;\n        // if (imagePreviewUrl) {\n        //     $imagePreview = (<img src={imagePreviewUrl} />);\n        // } else {\n        //     $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n        // }\n\n        return (\n            <div className=\"previewComponent\">\n                {/*<form onSubmit={(e)=>this._handleSubmit(e)}>*/}\n                {/*    <input className=\"fileInput\"*/}\n                {/*           type=\"file\"*/}\n                {/*           onChange={(e)=>this._handleImageChange(e)} />*/}\n                {/*    <button className=\"submitButton\"*/}\n                {/*            type=\"submit\"*/}\n                {/*            onClick={(e)=>this._handleSubmit(e)}>Upload Image</button>*/}\n                {/*</form>*/}\n                {/*<div className=\"imgPreview\">*/}\n                {/*    /!*{$imagePreview}*!/*/}\n                {/*</div>*/}\n            </div>\n        );\n    }\n}\n\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}